.row {
    max-width: $grid-width;
    margin: 0 auto;
    
    &:not(:last-child) { // everyrow except the last row
        margin-bottom: $gutter-vertical;
        @include respond(tab-port) {
            margin-bottom: $gutter-vertical-small;
        }
    }
    @include respond(tab-port) {
        max-width: 50rem;
        padding: 0 3rem;
    }
    @include clearfix; // refer the mixin file

    // ATTRIBUTE SELECTOR -> kinda like mixin but lighter
    /* 
    class^="col-" -> selecting class that has prefix col-
    class$="col-" -> selecting class that has suffix col-
    class*="col-" -> selecting class that has contain col-
    */
    [class^="col-"]  { 
        float: left;

        &:not(:last-child) { // every item in row except the last item
            margin-right: $gutter-horizontal;
            @include respond(tab-port) {
                margin-right: 0;
                margin-bottom: $gutter-vertical-small;
            }
        }
        @include respond(tab-port) {
            width: 100% !important;
        }
    }
    .col-1-of-2 {
        width: calc((100% - #{$gutter-horizontal}) / 2); // to use sass variable inside css calc operation we need to wrap it with #{ }
    }
    .col-1-of-3 {
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3); // * 2 gutter horizontal because 3 items have two gutters
    }
    .col-1-of-4 {
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4); // * 2 gutter horizontal because 3 items have two gutters
    }
    .col-2-of-3 {
        width: calc(
            ((100% - 2 * #{$gutter-horizontal}) / 3) * 2 +  #{$gutter-horizontal}
        ); // * 2 gutter horizontal because 3 items have 2 gutters
    }
    .col-2-of-4 {
        width: calc(
            ((100% - 3 * #{$gutter-horizontal}) / 4) * 2 +  #{$gutter-horizontal}
        ); // * 3 gutter horizontal because 4 items have 3 gutters
    }
    .col-3-of-4 {
        width: calc(
            ((100% - 3 * #{$gutter-horizontal}) / 4) * 3 +  2 * #{$gutter-horizontal}
        );
    }
}